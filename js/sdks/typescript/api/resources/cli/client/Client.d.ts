/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as ComposioApi from "../../../index";
export declare namespace Cli {
    interface Options {
        environment?: core.Supplier<environments.ComposioApiEnvironment | string>;
        apiKey: core.Supplier<string>;
        /** Override the x-org-api-key header */
        orgApiKey: core.Supplier<string>;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the x-org-api-key header */
        orgApiKey?: string;
    }
}
export declare class Cli {
    protected readonly _options: Cli.Options;
    constructor(_options: Cli.Options);
    /**
     * @param {Cli.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.cli.generateCliSession()
     */
    generateCliSession(requestOptions?: Cli.RequestOptions): Promise<ComposioApi.GenerateCliSessionResDto>;
    /**
     * @param {ComposioApi.CliGetCliCodeRequest} request
     * @param {Cli.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.cli.getCliCode({
     *         key: "key"
     *     })
     */
    getCliCode(request: ComposioApi.CliGetCliCodeRequest, requestOptions?: Cli.RequestOptions): Promise<ComposioApi.GetCliSessionResDto>;
    /**
     * @param {ComposioApi.CliVerifyCliCodeRequest} request
     * @param {Cli.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.cli.verifyCliCode({
     *         key: "key"
     *     })
     */
    verifyCliCode(request: ComposioApi.CliVerifyCliCodeRequest, requestOptions?: Cli.RequestOptions): Promise<ComposioApi.VerifyCliCodeResDto>;
    protected _getCustomAuthorizationHeaders(): Promise<{
        "x-api-key": string;
    }>;
}
