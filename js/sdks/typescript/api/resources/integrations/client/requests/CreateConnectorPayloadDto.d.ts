/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as ComposioApi from "../../../../index";
/**
 * @example
 *     {
 *         name: "name"
 *     }
 */
export interface CreateConnectorPayloadDto {
    /** A unique name for your connector. This will be used to identify the connector in the system. */
    name: string;
    /** The authentication scheme used by the connector. Refer to the `/api/v1/apps` endpoint to see supported authentication schemes for each app. */
    authScheme?: string;
    /** Configuration options for authentication. Required when using OAuth-based authentication schemes. */
    authConfig?: ComposioApi.AuthConfigDto;
    /** When set to true, the connector will use Composio's built-in authentication system. Learn more in the Authentication section of the API documentation. */
    useComposioAuth?: boolean;
    /** UUID of the Composio app to use for authentication. You can get this from the `id` field in the response of the `GET /api/v1/apps` endpoint. Either specify this or appName. */
    appId?: string;
    /** Name of the Composio app to use for authentication. You can get this from the `name` field in the response of the `GET /api/v1/apps` endpoint. Either specify this or appId. */
    appName?: string;
    /** When set to true, creates a new integration even if one already exists for the given app. This is useful when you need multiple integrations with the same service. */
    forceNewIntegration?: boolean;
}
