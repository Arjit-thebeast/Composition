/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as ComposioApi from "../index";
/**
 * List of connectors with their details and associated connections
 */
export interface ConnectorListItemDto {
    /** Name of the application associated with this connector. You can find this in the response of the `GET /api/v1/apps` endpoint. */
    appName: string;
    /** Aggregate count of connections associated with this connector. This helps track how many connected accounts are using this connector configuration. */
    count: Record<string, unknown>;
    /** List of connections associated with this connector, including their IDs and request log counts. Each connection represents a unique connected account using this connector configuration. */
    connections: Record<string, unknown>[];
    /** Unique identifier (UUID) of the connector. You can use this ID when calling endpoints like `GET /api/v1/connectors/{id}` or `PUT /api/v1/connectors/{id}`. */
    id: string;
    member: ComposioApi.MemberInfoResDto;
    /** Display name of the connector. This name is used to identify the connector in the UI and API responses. */
    name: string;
    /** Authentication scheme used by this connector. Determines how authentication is handled for connected accounts. See the Authentication Schemes section in the API documentation for more details. */
    authScheme: string;
    /** Timestamp when this connector was created. Returned in ISO 8601 format. */
    createdAt: ComposioApi.ConnectorListItemDtoCreatedAt;
    /** Timestamp when this connector was last updated. Returned in ISO 8601 format. */
    updatedAt: ComposioApi.ConnectorListItemDtoUpdatedAt;
    /** Indicates whether the connector is currently enabled. Disabled connectors cannot be used to create new connections. */
    enabled: boolean;
    /** Soft deletion flag for the connector. When true, the connector is marked as deleted but remains in the database. You can filter deleted connectors using the `includeDeleted` query parameter in list endpoints. */
    deleted?: boolean;
    /** Unique identifier (UUID) of the app this connector belongs to. You can use this ID to fetch app details via the `GET /api/v1/apps/{id}` endpoint. */
    appId: string;
    /** ID of the default connector configuration. When present, this indicates that this connector inherits settings from the specified default connector. You can manage default connectors via the `/api/v1/defaultConnectors` endpoints. */
    defaultConnectorId?: string;
}
