/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as ComposioApi from "../index";
export interface GetConnectorInfoResDto {
    /** Unique identifier for the connector. You can use this ID when calling endpoints like `POST /api/v1/connectedAccounts` to create connections. */
    id?: string;
    /** The authentication method used by this connector. Refer to the API documentation for supported authentication schemes. */
    authScheme?: string;
    /** The display name of this specific connector configuration. */
    name?: string;
    /** ISO 8601 timestamp of when this connector was created. */
    createdAt?: string;
    /** ISO 8601 timestamp of when this connector was last modified. */
    updatedAt?: string;
    /** Whether this connector is currently active and can be used to create new connections. Can be toggled using the connector management endpoints. */
    enabled: boolean;
    /** Soft deletion status of the connector. If true, the connector has been marked for deletion but may still exist in the system. */
    deleted?: boolean;
    /** The ID of the application this connector belongs to. You can find available apps using the `GET /api/v1/apps` endpoint. */
    appId: string;
    /** If this is a custom connector, this field may reference the original template connector it was based on. */
    defaultConnectorId?: string;
    /** Configuration object containing authentication settings. Sensitive values will be redacted. The structure varies based on the authScheme. */
    authConfig: Record<string, unknown>;
    /** List of fields that need to be collected from users to set up a connection using this connector. These fields should be included when calling `POST /api/v1/connectedAccounts`. */
    expectedInputFields: ComposioApi.ExpectedInputFieldsDto[];
    /** URL to the application's logo image that can be displayed in the UI. */
    logo: string;
    /** The name of the application this connector integrates with. */
    appName: string;
    /** When true, indicates that this connector uses Composio's built-in authentication handling rather than custom authentication logic. */
    useComposioAuth: boolean;
}
