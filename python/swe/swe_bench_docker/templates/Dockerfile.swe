# Generated by generate_dockerfiles.py

FROM ubuntu:jammy

ARG TARGETARCH

# Install third party tools
RUN apt-get update && \
    apt-get install -y bash gcc git jq wget g++ make libffi-dev build-essential python3.11&& \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Initialize git
RUN git config --global user.email "sweagent@pnlp.org"
RUN git config --global user.name "sweagent"

# Environment variables
ENV ROOT='/dev/'
RUN prompt() { echo " > "; };
ENV PS1="> "

# Create file for tracking edits, test patch
RUN touch /root/files_to_edit.txt
RUN touch /root/test.patch

# add ls file indicator
RUN echo "alias ls='ls -F'" >> /root/.bashrc

# Setup Conda
# Install miniconda
ENV PATH="/root/miniconda3/bin:${PATH}"
ARG PATH="/root/miniconda3/bin:${PATH}"
COPY ./swe_bench_docker/templates/getconda.sh .
RUN bash getconda.sh ${TARGETARCH} \
    && rm getconda.sh \
    && mkdir /root/.conda \
    && bash miniconda.sh -b \
    && rm -f miniconda.sh
RUN conda --version \
    && conda init bash \
    && conda config --append channels conda-forge


WORKDIR /opt

RUN conda run pip install -U composio-core

RUN git clone https://github.com/swe-bench/{{ repo_name }}.git
ENV REPO_DIR=/opt/{{ repo_name }}

WORKDIR /opt/{{ repo_name }}

RUN git -c advice.detachedHead=false checkout {{ environment_setup_commit }}

RUN {{conda_create_cmd}}
SHELL ["conda", "run", "-n", "{{ testbed }}", "/bin/bash", "-c"]

RUN pip install -U pip setuptools

{% if pre_install_cmds -%}
{% for cmd in pre_install_cmds -%}
RUN {{ cmd }}
{% endfor -%}
{% endif -%}

{% if path_to_reqs -%}
COPY {{ path_to_reqs }} .
{% endif -%}

{% for cmd in install_cmds %}
RUN {{ cmd }}
{% endfor %}

ENTRYPOINT ["/bin/bash"]
